{
  "BlocProvider": {
    "prefix": "blocprovider",
    "body": [
      "BlocProvider(",
      "\tcreate: (context) => ${1:Subject}${2|Cubit,Bloc|}(),",
      "\tchild: ${3:Container()},",
      ")"
    ]
  },
  "MultiBlocProvider": {
    "prefix": "multiblocprovider",
    "body": [
      "MultiBlocProvider(",
      "\tproviders: [",
      "\t\tBlocProvider(",
      "\t\t\tcreate: (context) => ${1:Subject}${2|Cubit,Bloc|}(),",
      "\t\t),",
      "\t\tBlocProvider(",
      "\t\t\tcreate: (context) => ${3:Subject}${4|Cubit,Bloc|}(),",
      "\t\t),",
      "\t],",
      "\tchild: ${5:Container()},",
      ")"
    ]
  },
  "RepositoryProvider": {
    "prefix": "repoprovider",
    "body": [
      "RepositoryProvider(",
      "\tcreate: (context) => ${1:Subject}Repository(),",
      "\tchild: ${2:Container()},",
      ")"
    ]
  },
  "MultiRepositoryProvider": {
    "prefix": "multirepoprovider",
    "body": [
      "MultiRepositoryProvider(",
      "\tproviders: [",
      "\t\tRepositoryProvider(",
      "\t\t\tcreate: (context) => ${1:Subject}Repository(),",
      "\t\t),",
      "\t\tRepositoryProvider(",
      "\t\t\tcreate: (context) => ${2:Subject}Repository(),",
      "\t\t),",
      "\t],",
      "\tchild: ${3:Container()},",
      ")"
    ]
  },
  "BlocBuilder": {
    "prefix": "blocbuilder",
    "body": [
      "BlocBuilder<${1:Subject}${2|Cubit,Bloc|}, $1State>(",
      "\tbuilder: (context, state) {",
      "\t\tif(state is $1Failed) {",
      "\t\t\treturn ErrorOutput(message: state.message);",
      "\t\t}",
      "\t\tif(state is $1Loaded) {",
      "\t\t\treturn ${3:Container()};",
      "\t\t}",
      "\t\treturn Loading();",
      "\t},",
      ")"
    ]
  },
  "BlocListener": {
    "prefix": "bloclistener",
    "body": [
      "BlocListener<${1:Subject}${2|Cubit,Bloc|}, $1State>(",
      "\tlistener: (context, state) {",
      "\t\tif(state is $1Loading) {",
      "\t\t\tshowLoadingDialog(context);",
      "\t\t\return;",
      "\t\t}",
      "\t\tNavigator.of(context, rootNavigator: true).pop();",
      "\t\tif(state is $1Failed) {",
      "\t\t\tshowErrorDialog(context);",
      "\t\t}",
      "\t\tif(state is $1Success) {",
      "\t\t\tshowSuccessDialog(context);",
      "\t\t}",
      "\t},",
      "\tchild: ${4:Container()},",
      ")"
    ]
  },
  "MultiBlocListener": {
    "prefix": "multibloclistener",
    "body": [
      "MultiBlocListener(",
      "\tlisteners: [",
      "\t\tBlocListener<${1:Subject}${2|Cubit,Bloc|}, $1State>(",
      "\t\t\tlistener: (context, state) {",
      "\t\t\t\t${3:// TODO: implement listener}",
      "\t\t\t},",
      "\t\t),",
      "\t\tBlocListener<${4:Subject}${5|Cubit,Bloc|}, $4State>(",
      "\t\t\tlistener: (context, state) {",
      "\t\t\t\t${6:// TODO: implement listener}",
      "\t\t\t},",
      "\t\t),",
      "\t],",
      "\tchild: ${7:Container()},",
      ")"
    ]
  },
  "BlocConsumer": {
    "prefix": "blocconsumer",
    "body": [
      "BlocConsumer<${1:Subject}${2|Cubit,Bloc|}, $1State>(",
      "\tlistener: (context, state) {",
      "\t\t${3:// TODO: implement listener}",
      "\t},",
      "\tbuilder: (context, state) {",
      "\t\treturn ${4:Container()};",
      "\t},",
      ")"
    ]
  },
  "BlocProvider.of()": {
    "prefix": "blocof",
    "body": "BlocProvider.of<${1:Subject}${2|Cubit,Bloc|}>(context)"
  },
  "RepositoryProvider.of()": {
    "prefix": "repoof",
    "body": "RepositoryProvider.of<${1:Subject}Repository>(context)"
  },
  "context.read()": {
    "prefix": "read",
    "body": "context.read<${1:Subject}${2|Cubit,Bloc,Repository|}>()"
  },
  "context.select()": {
    "prefix": "select",
    "body": "context.select((${1:Subject}${2|Cubit,Bloc|} ${3:element}) => $3$4)"
  },
  "context.watch()": {
    "prefix": "watch",
    "body": "context.watch<${1:Subject}${2|Cubit,Bloc,Repository|}>()"
  },
  "Import package:flutter_bloc": {
    "prefix": "importflutterbloc",
    "body": "import 'package:flutter_bloc/flutter_bloc.dart';"
  }
}